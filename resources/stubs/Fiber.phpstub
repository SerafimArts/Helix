<?php

/**
 * This file is part of Helix package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

/**
 * @template-covariant TKey
 * @template-covariant TValue
 * @template TSend
 * @template-covariant TReturn
 */
final class Fiber
{
    /**
     * @param callable(...TSend): TValue $callback
     */
    public function __construct(callable $callback) {}

    /**
     * @param TSend ...$args
     * @return TValue
     */
    public function start(mixed ...$args): mixed {}

    /**
     * @param TSend $value
     * @psalm-ignore-nullable-return
     * @return TValue|null Can return any type.
     */
    public function resume(mixed $value = null): mixed {}

    /**
     * @param Throwable $exception
     * @psalm-ignore-nullable-return
     * @return TValue|null Can return any type.
     */
    public function throw(Throwable $exception): mixed {}

    /**
     * @return bool
     */
    public function isStarted(): bool {}

    /**
     * @return bool
     */
    public function isSuspended(): bool {}

    /**
     * @return bool
     */
    public function isRunning(): bool {}

    /**
     * @return bool
     */
    public function isTerminated(): bool {}

    /**
     * @return TReturn
     */
    public function getReturn(): mixed {}

    /**
     * @return Fiber|null
     */
    public static function getCurrent(): ?Fiber {}

    /**
     * @param TSend|null $value
     * @return TValue
     */
    public static function suspend(mixed $value = null): mixed {}
}

final class FiberError extends Error
{
    public function __construct() {}
}
